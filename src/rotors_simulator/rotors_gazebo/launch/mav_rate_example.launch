<?xml version="1.0"?>
<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="mav_name_yaml" default="firefly"/>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <group ns="$(arg mav_name)_1">

    <include file="$(find rotors_gazebo)/launch/spawn_mav_rate.launch">
      <arg name="mav_name" value="$(arg mav_name)_1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" default="4.15"/>
      <arg name="y" default="1.15"/>
      <arg name="z" default="0.1"/>
      <arg name="mav_name_yaml" default="$(arg mav_name)"/>
    </include>

    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

      

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  </group>

  <group ns="$(arg mav_name)_2">

    <include file="$(find rotors_gazebo)/launch/spawn_mav_rate.launch">
      <arg name="mav_name" value="$(arg mav_name)_2" />
      <arg name="mav_name_yaml" value="$(arg mav_name_yaml)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" default="2.15"/>
      <arg name="y" default="-2.85"/>
      <arg name="z" default="0.1"/>
    </include>

    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name_yaml).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name_yaml).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
   

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  </group>

  <group ns="$(arg mav_name)_3">

    <include file="$(find rotors_gazebo)/launch/spawn_mav_rate.launch">
      <arg name="mav_name" value="$(arg mav_name)_3" />
      <arg name="mav_name_yaml" value="$(arg mav_name_yaml)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" default="6.15"/>
      <arg name="y" default="-2.85"/>
      <arg name="z" default="0.1"/>
    </include>

    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name_yaml).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name_yaml).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>


    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  </group>

  <group ns="$(arg mav_name)_4">

    <include file="$(find rotors_gazebo)/launch/spawn_mav_rate.launch">
      <arg name="mav_name" value="$(arg mav_name)_4" />
      <arg name="mav_name_yaml" value="$(arg mav_name_yaml)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" default="10.0"/>
      <arg name="y" default="0.0"/>
      <arg name="z" default="0.1"/>
    </include>

    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name_yaml).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name_yaml).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  </group>

     <!--> <node name="fov" pkg="rotors_gazebo" type="fov.py" output="screen">
       </node>

       <node name="fov2" pkg="rotors_gazebo" type="fov2.py" output="screen">
       </node>

       <node name="fov3" pkg="rotors_gazebo" type="fov3.py" output="screen">
       </node>

       <node name="fov4" pkg="rotors_gazebo" type="fov4.py" output="screen">
       </node>-->

      <node name="fov_controller" pkg="rotors_control" type="fov_controller" output="screen">
      </node>

</launch>